name: Release

on:
  push:
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  release:
    if: github.repository == 'tokens-studio/token-studio-sdk'
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
        # Needed for gitversioning
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: "5.x"
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Set package version
        run: npm version ${{ steps.gitversion.outputs.SemVer }} --no-git-tag-version
    
      # TODO remove this when out of alpha
      - name: Set package prerelease
        run: npm version prerelease --preid=alpha --no-git-tag-version

      - name: Build dist
        run: npm run build

      - name: Build docs
        run: npm run docs

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ vars.VAULT_URL }}
          role: ${{ vars.VAULT_ROLE }}
          method: jwt
          namespace: admin
          secrets: |
            secret/data/cicd/npm/root TOKEN | NPM_TOKEN;

      - name: Deploy package to npm 
        run: npm publish
        env:
          NPM_TOKEN: ${{ steps.secrets.outputs.NPM_TOKEN }}
      
      - name: Tag released  
        run: git tag release\${{ steps.gitversion.outputs.SemVer }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire docs folder
          path: './docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1